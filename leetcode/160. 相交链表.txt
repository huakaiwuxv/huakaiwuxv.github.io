/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        //有空的情况
        if(headA==null || headB==null)
            return null;
        //判断A的长度
        int len_A=0;
        //判断B的长度
        int len_B=0;
        ListNode tmp = null;
        ListNode A=headA;
        ListNode B=headB;
        while(A!=null){len_A++;A=A.next;}
        while(B!=null){len_B++;B=B.next;}
        //比较长度
        if(len_A>=len_B){
            for(int i = 0;i<len_A-len_B;i++)
                headA=headA.next;
        }
        else{
            for(int i = 0;i<len_B-len_A;i++)
                headB=headB.next;
        }
        while(headA!=null){
            if(headA==headB){
                return headA;
            }
            headA=headA.next;
            headB=headB.next;
        }
        return null;
    }
}