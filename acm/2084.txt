#include<iostream>
#include<algorithm>  
#include<string>
using namespace std;
int C;
int N;
int a[101][101],dp[101][101];

//思路：状态方程:dp[i][j]=max(dp[i+1][j],dp[i+1][j+1])+a[i][j]; 其中,第i行j列   
int main()  
{  //2084
	cin>>C;
	while (C)
	{
		cin>>N;
		memset(a,0,sizeof(a));
		memset(dp,0,sizeof(dp));
		for (int i = 0; i < N; i++)
		{
			for (int j = 0; j <= i; j++)
			{
				cin>>a[i][j];
			}
		}
		for (int i = 0; i < N; i++)
		{
			dp[N-1][i]=a[N-1][i];
		}
		for (int i = N-2; i >=0; i--)
		{
			for (int j = i; j >= 0; j--)
			{
				dp[i][j]=max(dp[i+1][j],dp[i+1][j+1])+a[i][j];
			}
		}
		cout<<dp[0][0]<<endl;
		C--;
	}
	system("pause");
	return 0;
}